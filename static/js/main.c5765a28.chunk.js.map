{"version":3,"sources":["util/apiUtil.js","util/generalUtil.js","model/main/entity/course/dict/CourseDict.js","model/main/entity/course/base/Course.js","model/main/entity/course/info/benefit/Benefit.js","model/main/entity/course/info/brief/Brief.js","model/main/entity/course/info/description/Description.js","model/main/entity/course/info/participant/Participant.js","model/main/entity/course/info/base/Info.js","model/main/entity/course/info/base/InfoUtil.js","model/main/entity/course/info/brief/BriefUtil.js","model/main/entity/course/info/benefit/BenefitUtil.js","model/main/entity/course/info/description/DescriptionUtil.js","model/main/entity/course/info/participant/ParticipantUtil.js","model/main/entity/course/cost/Cost.js","model/main/entity/course/cost/CostUtil.js","model/main/entity/course/product/dict/Dict.js","model/main/entity/course/product/base/Product.js","model/main/entity/user/User.js","model/main/entity/user/UserUtil.js","model/main/entity/course/product/base/ProductUtil.js","model/main/entity/course/product/dict/DictUtil.js","model/main/entity/course/base/CourseUtil.js","model/main/entity/course/info/base/InfoUrl.js","model/main/entity/course/dict/CourseDictUtil.js","model/main/entity/course/base/CourseUrl.js","model/main/single/model/PMData.js","model/main/single/model/PMDataUtil.js","model/main/entity/layout/layout/Layout.js","model/image/Image.js","model/image/ImageUtil.js","model/image/ImageView.js","model/main/entity/layout/header/Header.js","model/main/entity/view/ViewType.js","model/main/entity/course/dict/CourseDictVM.js","model/main/entity/course/cost/CostVM.js","model/main/entity/course/cost/CostView.js","model/main/entity/course/view/cost/CourseCostView.js","model/listview/ListView_OrientationType.js","model/listview/ListView.js","model/listview/ListViewUtil.js","model/main/entity/course/info/benefit/BenefitVM.js","model/main/entity/course/info/benefit/BenefitVMUtil.js","model/main/entity/course/info/brief/BriefVM.js","model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/input/InputView.js","model/text/TextView.js","util/inputUtil.js","model/html/HtmlRenderVM.js","constant/viewType.js","model/main/entity/course/info/description/DescriptionVM.js","model/main/entity/course/info/description/DescriptionVMUtil.js","model/svg/PointerView.js","model/main/entity/course/info/participant/ParticipantVM.js","model/main/entity/course/info/participant/ParticipantVMUtil.js","model/main/entity/course/info/base/InfoVMUtil.js","model/main/entity/course/info/brief/BriefVMUtil.js","model/main/entity/course/info/base/InfoVM.js","model/main/entity/course/info/brief/BriefView.js","model/main/entity/course/info/benefit/BenefitView.js","util/htmlUtil.js","model/html/HtmlRenderView.js","model/html/HtmlRenderVMUtil.js","model/main/entity/course/info/description/DescriptionView.js","model/main/entity/course/info/participant/ParticipantView.js","model/main/entity/course/info/base/InfoView.js","model/main/entity/course/view/info/CourseInfoView.js","model/main/entity/course/base/CourseVM.js","model/main/entity/course/main/menu/MenuView.js","model/main/entity/course/main/base/Main_ViewType.js","model/nav/item/ItemView.js","model/nav/item/Item.js","model/nav/dict/DictView.js","model/nav/dict/Dict.js","model/main/entity/course/main/menu/MenuVMUtil.js","model/nav/item/ItemUtil.js","model/main/entity/course/main/menu/MenuVM.js","model/main/entity/course/main/base/MainView.js","model/main/entity/course/main/base/MainVM.js","model/main/entity/course/main/base/MainVMUtil.js","model/main/entity/course/product/dict/DictView.js","model/main/entity/course/product/dict/DictVM.js","model/main/entity/course/product/base/Product_BriefView.js","model/main/entity/course/product/base/Product_FullView.js","model/main/entity/course/product/base/ProductVM.js","util/dateUtil.js","model/main/entity/user/UserVM.js","model/main/entity/user/UserVMUtil.js","model/main/entity/course/product/base/ProductVMUtil.js","model/main/entity/course/product/dict/DictVMUtil.js","model/main/entity/course/base/CourseVMUtil.js","model/main/entity/course/cost/CostVMUtil.js","model/main/entity/course/view/item/CourseItemView.js","model/main/entity/course/dict/CourseDictVMUtil.js","model/main/entity/course/dict/CourseDictView.js","model/main/entity/layout/body/Body.js","model/main/entity/layout/footer/Footer.js","model/main/entity/layout/layout/LayoutUtil.js","model/main/entity/layout/header/HeaderUtil.js","model/main/entity/layout/body/BodyUtil.js","model/main/entity/layout/footer/FooterUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/entity/layout/header/HeaderView.js","model/main/entity/layout/body/BodyView.js","model/main/entity/layout/footer/FooterView.js","model/main/entity/layout/layout/LayoutView.js","model/main/single/form/PMDataView.js","model/main/single/form/PMDataVM.js","App.js","reportWebVitals.js","index.js"],"names":["http","timeout","axios","create","baseURL","Accept","handleNetworkError","err","showMessage","message","error","data","undefined","handleResponse","response","success","status","statusText","callApi","action","a","console","log","timeout_default","post","url","payload","config","result","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","Remove","dict","key","index","findIndex","x","Key","splice","Add_2","func","isDelete","push","Value","IsDelete","Handle","newDict_Handle","forEach","filter","CourseDict","OnSet_Items_Func_Dict","this","tempId","genUtil","_id","TempId","items","util","v","Course","OnSet_id_Func_Dict","OnSet_Info_Func","__id","name","info","cost","productDict","Benefit","Header","Brief","description","Description","Participant","Info","brief","benefit","participant","GetFromDb","qI","Name","Dict","briefUtil","benefitUtil","descriptionUtil","participantUtil","GetBrief","q","GetBenefit","GetDescription","GetParticipant","Cost","RawValue","RealValue","get","Items","Product","User","GetTest","GetTest1","GetTest2","GetTest3","Title","CreatedDate","Date","Authors","userUtil","Instructors","Meta","Thumbnail","obj","infoUtil","br","be","d","HtmlContent","p","costUtil","ProductDict","itemUtil","productDictUtil","Handle_Info","IsGet_Info","getApi","apiData","handle","api","then","dictId","setObj","GetCost","GetProductDict","iUtil","Handle_Items","IsGet_Items","list","map","infos","PMData","OnSet_IsAdmin_Func_Dict","isAdmin","IsDeploy","courseDict","courseDictUtil","instance","Layout","makeObservable","header","body","footer","Image","Source","Alt","Width","Height","observable","source","alt","width","height","ImageView","props","store","state","style","Style","className","ClassName","onClick","onDoubleClick","onMouseEnter","onMouseLeave","src","Component","observer","PMDataVM","Instance","MainMenu","img","imgUtil","home","type","meta","type2","RouteData","CurrentCourse","nullHandle","CourseDictVM","ModelItem","id","renderItem","CostVM","rawValue","realValue","FormatCurrency","NumberFormat","currency","format","FormatDiscount","ceil","Discount","CostView","CaretDownOutlined","size","to","CourseItemView","CourseVM","ThumbnailView","horizontal","vertical","ListView","ColumnCount","Orientation","ot","Wrapper_ClassName","Table_ClassName","length","ItemCount","idRender","itemRender","IdRender","view_Render","MainView","ItemRender","getIndex","rc","RowCount","cc","ic","elem","r","elem2","SingleColumn_View","MultiColumn_View","View_Render","BenefitVM","listView","GetListView","CheckOutlined","BriefVM","text","TextVM","content","placeholder","State","ts","onSetContent","OnSetContent","inputStyle","wrapper","position","InputView","onChange","e","value","target","Content","OnKeyDown","textVMUtil","Ref","React","createRef","onFocus","OnFocus","ref","onKeyDown","Password","TextView","getWrapperContent","getDefaultInput","HtmlRenderVM","OnSetInput_Funcs","inputs","GetData","reactElements","isFormatContent","Inputs","split","i","bracketIndex","indexOf","input","originContent","substring","res2","view","inputName","inputIndex","inputUtil","label","refinedContent","GetRefinedContent","Data","GetReactElements","RenderReactElements","ReactElements","location","document","getElementById","textVM","Input","display","ReactDOM","render","RefinedContent","DescriptionVM","htmlContentVM","GetHtmlContentVM","PointerView","ParticipantVM","InfoVM","BriefView","BenefitView","View","createMarkup","__html","HtmlRenderView","onClick2","itemRef","InitialContent","htmlRenderVMUtil","dangerouslySetInnerHTML","DescriptionView","HtmlContentVM","ParticipantView","InfoView","CourseInfoView","SupLink","main","CourseCostView","MenuView","MenuVM","ItemDict","student_product","ItemView","Item","OnClick","ItemCss","ActiveCss","CurrentItem","Func","Active","DictView","WrapperCss","GetItems","m_it","getItem","menuItemUtil","ViewType","itemDict","MainVM","Menu","vt","menu","DictVM","FullView","Product_BriefView","ProductVM","BadgeView","Product_FullView","CreatedDate_String","SetActive","date","toLocaleDateString","weekday","day","month","year","dateUtil","authors","instructors","UserVM","GetAuthors","GetInstructors","modelObj","GetMain","InfoLink","GetDefault_RenderItem","CourseDictView","mdict","mUtil","RenderItem","pmDataVM","Body","rd","Main","Footer","GetHeader","headerUtil","GetBody","bodyUtil","GetFooter","footerUtil","pmData","newfunc","IsAdmin","GetLayout","HeaderView","LogoView","BodyView","FooterView","LayoutView","match","params","withRouter","PMDataView","path","exact","component","layout","basename","process","App","WrapperView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.c5765a28.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n  baseURL: API_URL,\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json',\r\n  timeout,\r\n});\r\n\r\nconst handleNetworkError = (err, showMessage) => {\r\n  if (showMessage) {\r\n    message.error(`Error sending request: ${err}`);\r\n  }\r\n  return {\r\n    data: undefined\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action, showMessage) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    console.log(err)\r\n    return handleNetworkError(err, showMessage);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","import { PMData } from '../model/main/single/model/PMData';\r\nimport { PMDataVM } from '../model/main/single/form/PMDataVM';\r\nimport * as api from './apiUtil'\r\n\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 ||\r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp;\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}\r\n\r\nexport const GroupBy = function (xs, key) {\r\n  var groups = [];\r\n\r\n  xs.forEach(x => {\r\n    var val = x[key];\r\n    var group = undefined;\r\n    var index = groups.findIndex(y => val === y.Key);\r\n    if (index === -1) {\r\n      group = {\r\n        Key: val,\r\n        Items: []\r\n      };\r\n      groups.push(group);\r\n    } else {\r\n      group = groups[index];\r\n    }\r\n    group.Items.push(x);\r\n  })\r\n\r\n  return groups;\r\n};\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex(x => x.Key === key);\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID();\r\n\r\n  var newfunc = () => {\r\n    func();\r\n    if (isDelete) {\r\n      Remove(dict, key);\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: key,\r\n    Value: newfunc\r\n  });\r\n}\r\n\r\nexport const Add_2 = (dict, func, isDelete = true) => {\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: func,\r\n    IsDelete : isDelete\r\n  });\r\n}\r\n\r\nexport const Handle = (dict, newDict_Handle) => {\r\n  dict.forEach(x => x.Value());\r\n\r\n  dict = dict.filter(x => !x.IsDelete);\r\n  newDict_Handle(dict);\r\n}\r\n\r\n// Truy xuất thông tin Excel\r\nexport const ExcelColumnName = (n) => {\r\n  var ordA = 'A'.charCodeAt(0);\r\n  var ordZ = 'Z'.charCodeAt(0);\r\n  var len = ordZ - ordA + 1;\r\n\r\n  var s = \"\";\r\n  while(n >= 0) {\r\n      s = String.fromCharCode(n % len + ordA) + s;\r\n      n = Math.floor(n / len) - 1;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport const ExcelCellName = (row, col) => {\r\n  return `${ExcelColumnName(col)}${row+1}`;\r\n}\r\n\r\nexport const ExcelRangeName = (row1, col1, row2, col2) => {\r\n  return `${ExcelCellName(row1, col1)}:${ExcelCellName(row2, col2)}`\r\n}\r\n\r\n// Max min\r\nexport const MinMax = (arr) => {\r\n  return arr.reduce(({min, max}, v) => ({\r\n    min: min < v ? min : v,\r\n    max: max > v ? max : v,\r\n  }), { min: arr[0], max: arr[0] });\r\n}\r\n\r\n// Save Database\r\nexport const SaveDatabase = (q, url, handle) => {\r\n  var apiData = q.ApiData\r\n  var _id = apiData._id;\r\n\r\n  var isNew = _id ? false : true\r\n  const apiFunc = () => isNew ?\r\n    api.post(`${url}/add`, apiData) :\r\n    api.put(`${url}/edit`, apiData) \r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew){ \r\n        q._id = data._id\r\n      }\r\n      handle(data, isNew);\r\n    })\r\n}\r\n\r\nexport const DeleteDatabase = (q, url, handle) => {\r\n  var apiData = {\r\n    _id: q._id\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${url}/delete`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      handle(data);\r\n    })\r\n}\r\n\r\n// Get plain text from paste\r\nexport const GetPlainText = (pasteEvent) => {\r\n  var text = (pasteEvent.originalEvent || pasteEvent).clipboardData.getData('text/plain');\r\n  return text;\r\n}\r\n\r\n// Remove new line\r\nexport const RemoveNewLine = (text) => {\r\n  return text.replace(/\\r?\\n|\\r/g, \"\");\r\n}\r\n\r\n// First - Last Item\r\nexport const GetFirst = (list) => {\r\n  return list.length !== 0 ? list[0] : undefined;\r\n}\r\n\r\nexport const GetLast = (list) => {\r\n  return list.length !== 0 ? list[list.length -1] : undefined;\r\n}\r\n\r\n// Image\r\nexport const IsImage = (fileName) => {\r\n  var isValid = false;\r\n  var list = [ '.jpg', '.png', '.jpeg' ]\r\n\r\n  list.forEach(x => {\r\n    if (!isValid && fileName.includes(x)){\r\n      isValid = true;\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}\r\n\r\nexport const SingleFilter = (list, filter, nullHandle) => {\r\n  var index = list.findIndex(filter);\r\n  var obj = index !== -1 ? list[index] : undefined\r\n\r\n  if (obj === undefined && nullHandle) {\r\n    var obj = nullHandle();\r\n    list.push(obj);\r\n  }\r\n\r\n  return obj;\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './CourseDictUtil'\r\n\r\nexport class CourseDict {\r\n  _id\r\n  \r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func_Dict = []\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v){\r\n    this.items = v;\r\n    genUtil.Handle(this.OnSet_Items_Func_Dict,\r\n      (v) => this.OnSet_Items_Func_Dict = v);\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './CourseUtil'\r\nimport { url } from './CourseUrl'\r\n\r\nexport class Course {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id(){\r\n    return this.__id\r\n  } set _id(v){\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Meta\r\n\r\n  name\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = 'class name'\r\n    }\r\n    return this.name;\r\n  } set Name(v) {\r\n    this.name = v;\r\n  }\r\n\r\n  Thumbnail\r\n\r\n  // Info\r\n  OnSet_Info_Func = []\r\n\r\n  info\r\n  get Info(){\r\n    if (this.info === undefined){\r\n      util.Handle_Info(this)\r\n    } return this.info\r\n  } set Info(v){\r\n    this.info = v;\r\n    genUtil.Handle(this.OnSet_Info_Func,\r\n      (v) => this.OnSet_Info_Func = v)\r\n  }\r\n\r\n  // Cost\r\n  cost\r\n  get Cost(){\r\n    if (!this.cost){\r\n      this.cost = util.GetCost(this)\r\n    } return this.cost\r\n  } set Cost(v){\r\n    this.cost = v\r\n  }\r\n\r\n  // ProductDict\r\n  productDict\r\n  get ProductDict(){\r\n    if (!this.productDict){\r\n      this.productDict = util.GetProductDict(this)\r\n    } return this.productDict\r\n  } set ProductDict(v){\r\n    this.productDict = v;\r\n  }\r\n}","\r\nexport class Benefit {\r\n  Header = 'Bạn sẽ học được gì?'\r\n\r\n  Items\r\n}","\r\nexport class Brief {\r\n  name\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = 'class name'\r\n    }\r\n    return this.name;\r\n  } set Name(v) {\r\n    this.name = v;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = 'mô tả'\r\n    }\r\n    return this.description;\r\n  } set Description(v) {\r\n    this.description = v;\r\n  }\r\n}","\r\nexport class Description {\r\n  Header = 'Mô tả chung'\r\n\r\n  HtmlContent\r\n}","\r\nexport class Participant {\r\n  Header = 'Khóa học dành cho ai?'\r\n\r\n  Items\r\n}","import * as util from './InfoUtil'\r\nimport { url } from './InfoUrl'\r\n\r\nexport class Info {\r\n  brief\r\n  get Brief(){\r\n    if (!this.brief){\r\n      this.brief = util.GetBrief(this)\r\n    } return this.brief;\r\n  } set Brief(v){\r\n    this.brief = v;\r\n  }\r\n\r\n  benefit\r\n  get Benefit(){\r\n    if (!this.benefit){\r\n      this.benefit = util.GetBenefit(this)\r\n    } return this.benefit;\r\n  } set Benefit(v){\r\n    this.benefit = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = util.GetDescription(this)\r\n    } return this.description;\r\n  } set Description(v){\r\n    this.description = v;\r\n  }\r\n\r\n  participant\r\n  get Participant(){\r\n    if (!this.participant){\r\n      this.participant = util.GetParticipant(this)\r\n    } return this.participant;\r\n  } set Participant(v){\r\n    this.participant = v;\r\n  }\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport { Benefit } from \"../benefit/Benefit\";\r\nimport { Brief } from \"../brief/Brief\";\r\nimport { Description } from \"../description/Description\";\r\nimport { Participant } from \"../participant/Participant\";\r\n\r\nimport * as benefitUtil from '../benefit/BenefitUtil'\r\nimport * as briefUtil from '../brief/BriefUtil'\r\nimport * as descriptionUtil from '../description/DescriptionUtil'\r\nimport * as participantUtil from '../participant/ParticipantUtil'\r\n\r\nimport { Info } from \"./Info\"\r\nimport { url } from './InfoUrl'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Info();\r\n\r\n  qI._id = data._id;\r\n\r\n  qI.Brief = briefUtil.GetFromDb(data.brief, qI)\r\n  qI.Benefit = benefitUtil.GetFromDb(data.benefit, qI)\r\n  qI.Description = descriptionUtil.GetFromDb(data.description, qI)\r\n  qI.Participant = participantUtil.GetFromDb(data.participant, qI)\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Info();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetBrief = (q) => {\r\n  var qI = new Brief();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetBenefit = (q) => {\r\n  var qI = new Benefit();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetDescription = (q) => {\r\n  var qI = new Description();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetParticipant = (q) => {\r\n  var qI = new Participant();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Brief } from './Brief'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Brief();\r\n\r\n  qI.Name = data.name\r\n  qI.Description = data.description\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Brief();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\n","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Benefit } from './Benefit';\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Benefit();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Benefit();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\n","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Description } from './Description';\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Description();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Description();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\n","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Participant } from './Participant';\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Participant();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Participant();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\n","import * as util from './CostUtil'\r\nimport { url } from './CostUrl'\r\n\r\nexport class Cost {\r\n  RawValue = 4500000\r\n\r\n  RealValue = 3800000\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport { Cost } from './Cost';\r\nimport { url } from './CostUrl'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Cost();\r\n\r\n  qI._id = data._id;\r\n  qI.Value = data.value;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Cost();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { message } from 'antd';\r\nimport * as util from './DictUtil'\r\n\r\nexport class Dict {\r\n  Items = []\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ProductUtil'\r\nimport { url } from './ProductUrl'\r\n\r\nexport class Product {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id(){\r\n    return this.__id\r\n  } set _id(v){\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Title\r\n\r\n  Description\r\n\r\n  CreatedDate\r\n\r\n  Authors\r\n\r\n  Instructors\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as util from './UserUtil'\r\nimport { url } from './User_Url'\r\n\r\nexport class User {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id(){\r\n    return this.__id\r\n  } set _id(v){\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name\r\n\r\n  Gmail\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { User } from './User';\r\nimport { url } from './User_Url'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new User();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = get(dict);\r\n  qI.Name = 'Trung'\r\n  return qI;\r\n}\r\n\r\nexport const GetTest1 = (dict) => {\r\n  var qI = get(dict);\r\n  qI.Name = 'Tài'\r\n  return qI;\r\n}\r\n\r\nexport const GetTest2 = (dict) => {\r\n  var qI = get(dict);\r\n  qI.Name = 'Toàn'\r\n  return qI;\r\n}\r\n\r\nexport const GetTest3 = (dict) => {\r\n  var qI = get(dict);\r\n  qI.Name = 'Tùng'\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport { Product } from './Product'\r\nimport { url } from './ProductUrl'\r\nimport * as userUtil from '../../../user/UserUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Product();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI.Title = 'Tạo mã chi tiết liên kết'\r\n  qI.Description = 'Vào family, edit bảng mã bằng tham biến Comments'\r\n\r\n  qI.CreatedDate = new Date();\r\n\r\n  qI.Authors = [ userUtil.GetTest(dict) ]\r\n  qI.Instructors = [\r\n    userUtil.GetTest1(dict),\r\n    userUtil.GetTest2(dict)\r\n  ]\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest1 = (dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI.Title = 'Vẽ thép theo cạnh có sẵn'\r\n  qI.Description = 'Vào family, edit bảng mã bằng tham biến Comments'\r\n  \r\n  qI.CreatedDate = new Date();\r\n\r\n  qI.Authors = [ userUtil.GetTest3(dict) ]\r\n  qI.Instructors = [\r\n    userUtil.GetTest1(dict),\r\n    userUtil.GetTest2(dict)\r\n  ]\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { Dict } from './Dict'\r\nimport * as itemUtil from '../base/ProductUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI.Items = [\r\n    itemUtil.GetTest(dict),\r\n    itemUtil.GetTest1(dict)\r\n  ]\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import * as api from '../../../../../util/apiUtil'\r\nimport { Course } from './Course'\r\nimport { url } from './CourseUrl'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as infoUtil from '../info/base/InfoUtil'\r\nimport { Brief } from '../info/brief/Brief'\r\nimport { Benefit } from '../info/benefit/Benefit'\r\nimport { Description } from '../info/description/Description'\r\nimport { Participant } from '../info/participant/Participant'\r\nimport * as costUtil from '../cost/CostUtil'\r\nimport * as productDictUtil from '../product/dict/DictUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Course();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name\r\n  qI.Info = infoUtil.GetFromDb(data.infos[0], qI);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Course();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = get(dict);\r\n  qI.Meta = 'csharp-revitapi';\r\n  qI.Name = 'Csharp - RevitAPI'\r\n  qI.Thumbnail = 'https://tedu.com.vn/uploaded/images/path/042020/angular.png?w=270&h=161'\r\n\r\n  // Info\r\n  var obj = qI.Info = infoUtil.get(qI);\r\n  var br = obj.Brief = new Brief();\r\n  br.Dict = obj;\r\n  br.Name = 'Khóa học Csharp - Revit API dành cho người mới bắt đầu'\r\n  br.Description = 'Học từ căn bản đến khi cách tạo ứng dụng Revit API riêng của bạn'\r\n\r\n  var be = obj.Benefit = new Benefit();\r\n  be.Dict = obj;\r\n  be.Items = [\r\n    'Học CSharp hướng đối tượng 1',\r\n    'Học CSharp hướng đối tượng 2',\r\n    'Học CSharp hướng đối tượng 3',\r\n    'Học CSharp hướng đối tượng 4',\r\n    'Học CSharp hướng đối tượng 5',\r\n    'Học CSharp hướng đối tượng 6'\r\n  ]\r\n\r\n  var d = obj.Description = new Description();\r\n  d.Dict = obj;\r\n  d.HtmlContent = '<p>Mô tả ...</p>'\r\n\r\n  var p = obj.Participant = new Participant();\r\n  p.Dict = obj;\r\n  p.Items = [\r\n    'Người đang tìm hiểu về BIM',\r\n    'Người muốn cải thiện hiệu suất',\r\n    'Người muốn hiểu về các cấu trúc dữ liệu Revit'\r\n  ]\r\n\r\n  // Cost\r\n  var cost = qI.Cost = costUtil.get(qI);\r\n  cost.RawValue = 3500000\r\n  cost.RealValue = 3000000\r\n\r\n  // Product\r\n  qI.ProductDict = productDictUtil.GetTest(qI)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Info = (q) => {\r\n  if (q.IsGet_Info) return undefined;\r\n  q.IsGet_Info = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Info = infoUtil.GetFromDb(data[0], q)\r\n    q.IsGet_Info = false\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n      dictId: q._id\r\n    }\r\n\r\n    infoUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  if (q._id){\r\n    getApi()\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnSet_id_Func_Dict,\r\n      () => getApi()\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetCost = (q) => {\r\n  return costUtil.get(q)\r\n}\r\n\r\nexport const GetProductDict = (q) => {\r\n  return productDictUtil.get(q)\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","export const url = \"https://api.bimdev.vn/api/cd2_class\"","import { CD2_Class, Course, CourseDict } from './CourseDict'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as iUtil from '../base/CourseUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new CourseDict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI.Items = [\r\n    iUtil.GetTest(qI)\r\n  ]\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\n// Item\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    var list = data.map(x => iUtil.GetFromDb(x, q))\r\n\r\n    q.Items = list;\r\n    q.IsGet_Items= false\r\n  }\r\n\r\n  var apiData = {\r\n    \r\n  }\r\n\r\n  iUtil.GetData(apiData, (data) => {\r\n    setObj(data)\r\n  })\r\n}","export const url = \"https://api.bimdev.vn/api/cd2_class\"","import * as util from './PMDataUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get();\r\n    }\r\n    return this.instance;\r\n  } static set Instance(v) {\r\n    this.instance = v;\r\n  }\r\n\r\n  // User\r\n  OnSet_IsAdmin_Func_Dict = []\r\n\r\n  isAdmin = false\r\n  get IsAdmin() {\r\n    return this.isAdmin\r\n  } set IsAdmin(v) {\r\n    this.isAdmin = v;\r\n    genUtil.Handle(this.OnSet_IsAdmin_Func_Dict,\r\n      (v) => this.OnSet_IsAdmin_Func_Dict = v)\r\n  }\r\n\r\n  // Deploy\r\n  IsDeploy = false\r\n\r\n  get Prefix_Link() {\r\n    return this.IsDeploy ? '/bimdev2/#' : ''\r\n  }\r\n\r\n  // Data\r\n  courseDict\r\n  get CourseDict() {\r\n    if (!this.courseDict) {\r\n      this.courseDict = util.GetCourseDict(this)\r\n    } return this.courseDict\r\n  }\r\n}","import { PMData } from './PMData';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as courseDictUtil from '../../entity/course/dict/CourseDictUtil'\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMData();\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetCourseDict = (q) => {\r\n  return courseDictUtil.GetTest(q);\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './LayoutUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as vs from '../../view/ViewState'\r\n\r\nexport class Layout {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  header\r\n  get Header() {\r\n    if (!this.header) {\r\n      this.header = util.GetHeader(this);\r\n    }\r\n    return this.header;\r\n  }\r\n\r\n  body\r\n  get Body() {\r\n    if (!this.body) {\r\n      this.body = util.GetBody(this);\r\n    }\r\n    return this.body;\r\n  }\r\n\r\n  footer\r\n  get Footer() {\r\n    if (!this.footer) {\r\n      this.footer = util.GetFooter(this);\r\n    }\r\n    return this.footer;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class Image {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Source: observable,\r\n      Alt: observable,\r\n      Width : observable,\r\n      Height: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId(){\r\n    if (!this.tempId){\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n\r\n  Source = undefined\r\n\r\n  Alt = undefined\r\n\r\n  Width = undefined\r\n\r\n  Height = undefined\r\n}","import { Image } from \"./Image\"\r\n\r\nexport const get = (source, alt, width, height) => {\r\n  var qI = new Image();\r\n\r\n  qI.Source = source;\r\n  qI.Alt = alt;\r\n  qI.Width = width;\r\n  qI.Height = height;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(\r\n    'https://raw.githubusercontent.com/bimtaiht/bimdev-source/master/Image/hello.png',\r\n    'test-image',\r\n    200, 200\r\n  )\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as imageUtil from './ImageUtil'\r\n\r\nclass ImageView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = imageUtil.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ?\r\n      this.props.style : data.Style;\r\n\r\n    var className = this.props.className ?\r\n      this.props.className : data.ClassName\r\n\r\n    var onClick = this.props.onClick;\r\n    var onDoubleClick = this.props.onDoubleClick;\r\n    var onMouseEnter = this.props.onMouseEnter;\r\n    var onMouseLeave = this.props.onMouseLeave;\r\n\r\n    return (\r\n      <>\r\n        <img className={className} style={style}\r\n          src={data.Source} alt={data.Alt}\r\n          width={data.Width} height={data.Height} \r\n          onClick={onClick} \r\n          onDoubleClick={onDoubleClick}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ImageView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './HeaderUtil'\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport ImageView from '../../../../image/ImageView'\r\nimport * as imgUtil from '../../../../image/ImageUtil'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Header {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n  get MainMenu() {\r\n    return pmDataVM().MainMenu;\r\n  }\r\n\r\n  get LogoView() {\r\n    var img = imgUtil.get('https://bimdev.vn/wp-content/uploads/2020/01/logo.jpg')\r\n    return <ImageView className='header__logo' store={img} />\r\n  }\r\n}","import { PMDataVM } from \"../../single/form/PMDataVM\";\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport const home = 'home'\r\nexport const course = 'course'\r\n\r\nconst pmDataVM = () => PMDataVM.instance\r\n\r\nexport const Handle = (type, meta, type2) => {\r\n  var qI = pmDataVM();\r\n  qI.RouteData = [type ? type : home, type2];\r\n\r\n  switch (type) {\r\n    case 'course':\r\n      var list = qI.CourseDict.Items;\r\n      qI.CurrentCourse = genUtil.SingleFilter(list, (x) => x.Meta === meta)\r\n      break;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './CourseDictVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class CourseDictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func_Dict = []\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v){\r\n    this.items = v;\r\n    genUtil.Handle(this.OnSet_Items_Func_Dict,\r\n      (v) => this.OnSet_Items_Func_Dict = v);\r\n  }\r\n\r\n  renderItem\r\n  get RenderItem(){\r\n    if (!this.renderItem){\r\n      this.renderItem = util.GetDefault_RenderItem(this)\r\n    } return this.renderItem\r\n  } set RenderItem(v){\r\n    this.renderItem = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './CostVMUtil'\r\n\r\nexport class CostVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rawValue : observable,\r\n      realValue : observable\r\n    })\r\n  }\r\n\r\n  rawValue = undefined\r\n  get RawValue(){\r\n    if (!this.rawValue){\r\n      this.rawValue = this.ModelItem.RawValue\r\n    } return this.rawValue;\r\n  } set RawValue(v){\r\n    this.rawValue = this.ModelItem.RawValue = v\r\n  }\r\n\r\n  realValue = undefined\r\n  get RealValue(){\r\n    if (!this.realValue){\r\n      this.realValue = this.ModelItem.RealValue\r\n    } return this.realValue;\r\n  } set RealValue(v){\r\n    this.realValue = this.ModelItem.RealValue = v;\r\n  }\r\n\r\n  FormatCurrency = (v) => {\r\n    return new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(v);\r\n  }\r\n\r\n  get Discount(){\r\n    return (1 - this.RealValue / this.RawValue)\r\n  }\r\n\r\n  FormatDiscount = (v) => {\r\n    return Math.ceil(this.Discount * 100) + '%'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Cost.css'\r\nimport { CostVM } from './CostVM';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new CostVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cc__wrapper'>\r\n          <span className='cc__realvalue main-color'>\r\n            {data.FormatCurrency(data.RealValue)}\r\n          </span>\r\n          <div className='cc__rawvalue__wrapper dark-incolor'>\r\n            <span className='cc__rawvalue'>{data.FormatCurrency(data.RawValue)}</span>\r\n            <span className='cc__discount main-color'>\r\n              <span>\r\n                <CaretDownOutlined className='cc__discount__icon' />\r\n              </span>\r\n              <span>{data.FormatDiscount(data.Discount)}</span>\r\n            </span>\r\n          </div>\r\n\r\n          <div className='cc__button__wrapper'>\r\n            <Button type='primary' size='small'\r\n              className='cc__button main-bgcolor'>\r\n              THÊM GIỎ HÀNG\r\n            </Button>\r\n\r\n            <Link to=\"main\">\r\n              <Button type='primary' size='small'\r\n                className='cc__button sec-bgcolor'>\r\n                XEM NỘI DUNG\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(CostView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './CourseCost.css'\r\nimport { CourseVM } from '../../base/CourseVM';\r\nimport CostView from '../../cost/CostView';\r\n\r\nclass CourseItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new CourseVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='coursecost__wrapper'>\r\n          {data.ThumbnailView}\r\n          <div className='coursecost__main__wrapper'>\r\n            <CostView store={data.Cost}/>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(CourseItemView);\r\n","export const horizontal = 'horizontal'\r\nexport const vertical = 'vertical'","import { message } from 'antd';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as util from './ListViewUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport './ListView.css'\r\nimport * as ot from './ListView_OrientationType'\r\n\r\nexport class ListView {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Items: observable,\r\n      ColumnCount: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Items = []\r\n\r\n  get ItemCount() {\r\n    return this.Items.length\r\n  }\r\n\r\n  ColumnCount = 1\r\n\r\n  get RowCount() {\r\n    return Math.ceil(this.ItemCount / this.ColumnCount);\r\n  }\r\n\r\n  Orientation = ot.horizontal\r\n\r\n  idRender\r\n  get IdRender() {\r\n    if (!this.idRender) {\r\n      this.idRender = util.GetDefault_IdRender(this)\r\n    } return this.idRender\r\n  } set IdRender(v) {\r\n    this.idRender = v\r\n  }\r\n\r\n  itemRender;\r\n  get ItemRender() {\r\n    if (!this.itemRender) {\r\n      this.itemRender = util.GetDefault_ItemRender(this)\r\n    } return this.itemRender\r\n  } set ItemRender(v) {\r\n    this.itemRender = v\r\n  }\r\n\r\n  view_Render\r\n  get View_Render() {\r\n    if (!this.view_Render) {\r\n      this.view_Render = util.GetDefault_View_Render(this)\r\n    } return this.view_Render\r\n  } set View_Render(v) {\r\n    this.view_Render = v;\r\n  }\r\n\r\n  // View\r\n  Wrapper_ClassName = ''\r\n  Table_ClassName = ''\r\n\r\n  get SingleColumn_View() {\r\n    return this.Items?.map(this.ItemRender)\r\n  }\r\n\r\n  get MultiColumn_View() {\r\n    return util.GetMultiColumn_View(this)\r\n  }\r\n\r\n  get MainView() {\r\n    return this.ColumnCount === 1 ?\r\n      this.SingleColumn_View : this.MultiColumn_View\r\n  }\r\n\r\n  get View() {\r\n    return this.View_Render();\r\n  }\r\n}","import { message } from \"antd\";\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as ot from './ListView_OrientationType'\r\n\r\n// Instance\r\n\r\n\r\n// Property\r\nexport const GetDefault_IdRender = (q) => {\r\n  return (v) => v.id\r\n}\r\n\r\nexport const GetDefault_ItemRender = (q) => {\r\n  return (v) => <div key={q.IdRender(v)}>{v}</div>\r\n}\r\n\r\nexport const GetMultiColumn_View = (q) => {\r\n  var rc = q.RowCount;\r\n  var cc = q.ColumnCount;\r\n  var ic = q.ItemCount;\r\n  var list = q.Items;\r\n\r\n  var elem = []\r\n  var getIndex\r\n\r\n  switch (q.Orientation) {\r\n    case ot.horizontal:\r\n      getIndex = (r, c) => r * cc + c;\r\n      break;\r\n    case ot.vertical:\r\n      getIndex = (r, c) => r + c * rc;\r\n      break;\r\n  }\r\n\r\n  for (let r = 0; r < rc; r++) {\r\n    var elem2 = []\r\n    for (let c = 0; c < cc; c++) {\r\n      var index = getIndex(r, c);\r\n      if (index < ic) {\r\n        var obj = list[index]\r\n        elem2.push(\r\n          <td key={q.IdRender(obj)}>{q.ItemRender(obj)}</td>\r\n        )\r\n      }\r\n    }\r\n    elem.push(\r\n      <tr key={genUtil.randomId()}>{elem2}</tr>\r\n    )\r\n  }\r\n\r\n  return <table className={q.Table_ClassName}>\r\n    <tbody>\r\n      {elem}\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetDefault_View_Render = (q) => {\r\n  return () => <div className={q.Wrapper_ClassName}>\r\n    {q.MainView}\r\n  </div>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './BenefitVMUtil'\r\n\r\nexport class BenefitVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Header(){\r\n    return this.ModelItem.Header;\r\n  } set Header(v){\r\n    this.ModelItem.Header = v\r\n  }\r\n\r\n  get Items(){\r\n    return this.ModelItem.Items;\r\n  } set Items(v){\r\n    this.ListView.Items = v;\r\n\r\n    this.ModelItem.Items = v\r\n  }\r\n\r\n  listView\r\n  get ListView(){\r\n    if (!this.listView){\r\n      this.listView = util.GetListView(this)\r\n    } return this.listView\r\n  }\r\n}","import { CheckOutlined } from \"@ant-design/icons\";\r\nimport { ListView } from \"../../../../../listview/ListView\";\r\nimport * as ot from \"../../../../../listview/ListView_OrientationType\";\r\nimport { BenefitVM } from \"./BenefitVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new BenefitVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetListView = (q) => {\r\n  var qI = new ListView();\r\n\r\n  qI.IdRender = (v) => v;\r\n  qI.ItemRender = (v) => {\r\n    return <div className='cibe__item__wrapper'>\r\n      <CheckOutlined className='cibe__item__icon' />\r\n      <span>{v}</span>\r\n    </div>\r\n  }\r\n\r\n  qI.Orientation = ot.vertical\r\n  qI.Table_ClassName = 'cibe__table'\r\n\r\n  qI.Items = q.Items;\r\n  qI.ColumnCount = 2;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './BriefVMUtil'\r\n\r\nexport class BriefVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  get Description() {\r\n    return this.ModelItem.Description;\r\n  } set Description(v) {\r\n    this.ModelItem.Description = v;\r\n  }\r\n}","export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown){\r\n      data.OnKeyDown(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n    var style = this.props.style\r\n    var className = this.props.className\r\n    var onFocus = this.props.onFocus ? \r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onKeyDown={this.OnKeyDown}\r\n            onFocus={onFocus}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange} \r\n            onFocus={onFocus}\r\n            onKeyDown={this.OnKeyDown}/> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n    var className = this.props.className\r\n    var style = this.props.style\r\n\r\n    return (\r\n      <>\r\n        <span className={className} style={style}>{content}</span>\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","export const alt = 'alt'\r\nexport const alt_enter = 'alt_enter'\r\n\r\nexport const ctrl = 'ctrl'\r\nexport const ctrl_b = 'ctrl_b'\r\nexport const ctrl_i = 'ctrl_i'\r\n\r\nexport const enter = 'enter'\r\nexport const tab = 'tab'\r\nexport const backspace = 'backspace'\r\nexport const del = 'del'\r\n\r\nexport const Get_Shortcut = (e) => {\r\n  var key ;\r\n  if (e.altKey && e.keyCode == 13) {\r\n      key = alt_enter\r\n  } else if (e.ctrlKey && e.which == 66) {\r\n    key = ctrl_b\r\n  } else if (e.ctrlKey && e.which == 73) {\r\n    key = ctrl_i\r\n  } else if (e.ctrlKey){\r\n    key = ctrl\r\n  } else if (e.altKey){\r\n    key = alt\r\n  } else if (e.keyCode == 13) {\r\n    key = enter\r\n  } else if (e.keyCode == 9){\r\n    key = tab\r\n  } else if (e.keyCode == 8){\r\n    key = backspace\r\n  } else if (e.keyCode == 46){\r\n    key = del\r\n  }\r\n\r\n  return {\r\n    key,\r\n    value : e.key\r\n  }\r\n}\r\n\r\n// Phương thức cũ đang sử dụng trong HtmlRenderVM\r\nexport const get = (inputs, name) => {\r\n  var index = inputs.findIndex(x => x.name === name);\r\n  if (index === -1) {\r\n    inputs.push(getDefaultInput(name));\r\n    index = inputs.length - 1;\r\n  }\r\n  return inputs[index];\r\n}\r\n\r\nexport const getDefaultInput = (name) => {\r\n  let value;\r\n  switch (name) {\r\n    case '0':\r\n      value = 0;\r\n      break;\r\n    case 'x':\r\n      value = 3;\r\n      break;\r\n    case 'class':\r\n      value = 'Person';\r\n      break;\r\n    case 'classDesc':\r\n      value = 'Kiểu dữ liệu mô phỏng ...';\r\n      break;\r\n    default:\r\n      value = 'undefined';\r\n      break;\r\n  }\r\n\r\n  return { name, value }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from '../../util/generalUtil'\r\nimport { renderToString } from 'react-dom/server'\r\nimport ReactDOM from 'react-dom'\r\nimport InputView from '../input/InputView';\r\nimport * as viewType from '../../constant/viewType'\r\nimport TextView from '../text/TextView';\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as inputUtil from '../../util/inputUtil'\r\n\r\nexport default class HtmlRenderVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      refinedContent: observable,\r\n      reactElements: observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    this.Data = this.GetData();\r\n\r\n    this.RenderReactElements();\r\n  }\r\n\r\n  set InitialContent(v) {\r\n    this.content = v;\r\n  }\r\n\r\n  OnSetInput_Funcs = [];\r\n\r\n  inputs = []\r\n  get Inputs(){\r\n    return this.inputs;\r\n  }\r\n  set Inputs(v){\r\n    this.inputs = v;\r\n    this.OnSetInput_Funcs.forEach(x => x());\r\n  }\r\n\r\n  data\r\n  get Data() {\r\n    if (!this.data) {\r\n      this.data = this.GetData();\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v){\r\n    this.data = v;\r\n    this.RefinedContent = this.GetRefinedContent();\r\n    this.ReactElements = this.GetReactElements();\r\n  }\r\n\r\n  GetData = () => {\r\n    var content = this.Content;\r\n    if (!content){\r\n      content = '';\r\n    }\r\n\r\n    var reactElements = [];\r\n\r\n    if (!this.isFormatContent) {\r\n      return {\r\n        content,\r\n        reactElements\r\n      }\r\n    }\r\n\r\n    var inputs = this.Inputs;\r\n    var res = content.split('{{');\r\n    \r\n    res.forEach((x, i) => {\r\n      if (i === 0) return false;\r\n\r\n      var bracketIndex = x.indexOf('}}');\r\n      if (bracketIndex === -1) return false;\r\n\r\n      var originContent = x.substring(0, bracketIndex);\r\n\r\n      // Kiểm tra có phần inputs ko ?\r\n      var res2 = originContent.split(',');\r\n      var view = res2[0];\r\n      let input;\r\n      if (inputs) {\r\n        if (res2.length >= 2) {\r\n          var inputName = res2[1];\r\n          if (inputName.length !== 0) {\r\n            var inputIndex = inputs.findIndex(x => x.name === inputName);\r\n            if (inputIndex === -1) {\r\n              inputs.push(inputUtil.getDefaultInput(inputName));\r\n              inputIndex = inputs.length - 1;\r\n            }\r\n            input = inputs[inputIndex];\r\n\r\n            if (res2.length === 3) {\r\n              var label = res2[2];\r\n              if (label.length !== 0) {\r\n                input.label = res2[2];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var findIndex = reactElements.findIndex\r\n        (x => x.originContent === originContent);\r\n\r\n      if (findIndex === -1) {\r\n        reactElements.push({\r\n          id: util.randomId(),\r\n          originContent, view, input\r\n        })\r\n      }\r\n    })\r\n\r\n    reactElements.forEach(x => {\r\n      var { originContent, id } = x;\r\n      content = content.replace(`{{${originContent}}}`,\r\n        `<span id=\"${id}\" style=\"display:table\"></span>`);\r\n    })\r\n\r\n    return {\r\n      content, reactElements\r\n    };\r\n  }\r\n\r\n  refinedContent = undefined\r\n  get RefinedContent() {\r\n    if (!this.refinedContent) {\r\n      var content = this.GetRefinedContent();\r\n      this.refinedContent = content;\r\n    }\r\n    return this.refinedContent;\r\n  }\r\n  set RefinedContent(v){\r\n    this.refinedContent = v;\r\n  }\r\n\r\n  GetRefinedContent = () => {\r\n    return this.Data.content;\r\n  }\r\n\r\n  reactElements = undefined\r\n  get ReactElements() {\r\n    if (!this.reactElements) {\r\n      this.reactElements = this.GetReactElements();\r\n    }\r\n    return this.reactElements;\r\n  }\r\n  set ReactElements(v) {\r\n    this.reactElements = v;\r\n  }\r\n\r\n  GetReactElements = () => {\r\n    var elems = this.Data.reactElements;\r\n    return elems;\r\n  }\r\n\r\n  RenderReactElements = () => {\r\n    var reactElems = this.ReactElements;\r\n\r\n    reactElems.forEach(x => {\r\n      var { id, view, input } = x;\r\n      var location = document.getElementById(id);\r\n\r\n      if (input) {\r\n        var { value, label } = input;\r\n        var textVM = textVMUtil.get(value);\r\n        textVM.onSetContent = (value) => {\r\n          input.value = value;\r\n          this.Input = input;\r\n        }\r\n\r\n        let elem;\r\n        switch (view) {\r\n          case viewType.INPUTVIEW:\r\n            elem = <>\r\n              {label ?\r\n                <>\r\n                  <span style={{ display: 'table-cell' }}><b>{label}:</b></span>\r\n                  <span style={{display: 'table-cell',width:10}}></span>\r\n                </> : ''\r\n              }\r\n              <InputView store={textVM} />\r\n            </>;\r\n            break;\r\n          case viewType.TEXTVIEW:\r\n            elem = <TextView store={textVM} />;\r\n            break;\r\n        }\r\n\r\n\r\n        if (elem && location !== null) {\r\n          ReactDOM.render(elem, location);\r\n        }\r\n      }\r\n    })\r\n  }\r\n}","export const TEXTVIEW = \"TEXTVIEW\";\r\nexport const CODEVIEW = \"CODEVIEW\";\r\nexport const FOLDERVIEW = \"FOLDERVIEW\";\r\nexport const INPUTVIEW = \"INPUTVIEW\";\r\nexport const MAPVIEW = \"MAPVIEW\"\r\nexport const SLIDERVIEW = \"SLIDERVIEW\"","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DescriptionVMUtil'\r\nimport HtmlRenderVM from '../../../../../html/HtmlRenderVM'\r\n\r\nexport class DescriptionVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Header(){\r\n    return this.ModelItem.Header;\r\n  } set Header(v){\r\n    this.ModelItem.Header = v\r\n  }\r\n\r\n  get HtmlContent(){\r\n    return this.ModelItem.HtmlContent;\r\n  } set HtmlContent(v){\r\n    this.ModelItem.HtmlContent = v\r\n  }\r\n\r\n  htmlContentVM\r\n  get HtmlContentVM(){\r\n    if (!this.htmlContentVM){\r\n      this.htmlContentVM = util.GetHtmlContentVM(this)\r\n    } return this.htmlContentVM;\r\n  }\r\n}","import HtmlRenderVM from \"../../../../../html/HtmlRenderVM\";\r\nimport { DescriptionVM } from \"./DescriptionVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new DescriptionVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetHtmlContentVM = (q) => {\r\n  var qI = new HtmlRenderVM();\r\n  qI.Content = q.HtmlContent;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass PointerView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var width = this.props.width ? this.props.width : 512\r\n    var height = this.props.height ? this.props.height : 512\r\n    var className = this.props.className\r\n\r\n    return (\r\n      <>\r\n        <svg className={className} width={width} height={height}>\r\n          <path d=\"M11.6 5c-0.2 0-0.5 0-0.6 0 0-0.2-0.2-0.6-0.4-0.8s-0.6-0.4-1.1-0.4c-0.2 0-0.4 0-0.6 0.1-0.1-0.2-0.2-0.3-0.3-0.5-0.2-0.2-0.5-0.4-1.1-0.4-0.2 0-0.4 0-0.5 0.1v-1.7c0-0.6-0.4-1.4-1.4-1.4-0.4 0-0.8 0.2-1.1 0.4-0.5 0.6-0.5 1.4-0.5 1.4v4.3c-0.6 0.1-1.1 0.3-1.4 0.6-0.6 0.7-0.6 1.6-0.6 2.8 0 0.2 0 0.5 0 0.7 0 1.4 0.7 2.1 1.4 2.8l0.3 0.4c1.3 1.2 2.4 1.6 5.1 1.6 2.9 0 4.2-1.6 4.2-5.1v-2.5c0-0.7-0.2-2.1-1.4-2.4zM12 7.4v2.6c0 3.4-1.3 4.1-3.2 4.1-2.4 0-3.3-0.3-4.3-1.3-0.1-0.1-0.2-0.2-0.4-0.4-0.7-0.8-1.1-1.2-1.1-2.2 0-0.2 0-0.5 0-0.7 0-1 0-1.7 0.3-2.1 0.1-0.1 0.4-0.2 0.7-0.2v0.5l-0.3 1.5c0 0.1 0 0.1 0.1 0.2s0.2 0 0.2 0l1-1.2c0-0.1 0-0.2 0-0.2v-6.2c0-0.1 0-0.5 0.2-0.7 0.1 0 0.2-0.1 0.4-0.1 0.3 0 0.4 0.3 0.4 0.4v3.1c0 0 0 0 0 0v1.2c0 0.3 0.2 0.6 0.5 0.6s0.5-0.3 0.5-0.5v-1.3c0 0 0 0 0 0 0-0.1 0.1-0.5 0.5-0.5 0.3 0 0.5 0.1 0.5 0.4v1.3c0 0.3 0.2 0.6 0.5 0.6s0.5-0.3 0.5-0.5v-0.7c0-0.1 0.1-0.3 0.5-0.3 0.2 0 0.3 0.1 0.3 0.1 0.2 0.1 0.2 0.4 0.2 0.4v0.8c0 0.3 0.2 0.5 0.4 0.5 0.3 0 0.5-0.1 0.5-0.4 0-0.1 0.1-0.2 0.2-0.3 0 0 0.1 0 0.2 0 0.6 0.2 0.7 1.2 0.7 1.5 0-0.1 0-0.1 0 0z\"></path>\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PointerView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ParticipantVMUtil'\r\n\r\nexport class ParticipantVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Header(){\r\n    return this.ModelItem.Header;\r\n  } set Header(v){\r\n    this.ModelItem.Header = v\r\n  }\r\n\r\n  get Items(){\r\n    return this.ModelItem.Items;\r\n  } set Items(v){\r\n    this.ListView.Items = v;\r\n\r\n    this.ModelItem.Items = v\r\n  }\r\n\r\n  listView\r\n  get ListView(){\r\n    if (!this.listView){\r\n      this.listView = util.GetListView(this)\r\n    } return this.listView\r\n  }\r\n}","import { ListView } from \"../../../../../listview/ListView\";\r\nimport * as ot from \"../../../../../listview/ListView_OrientationType\";\r\nimport PointerView from \"../../../../../svg/PointerView\";\r\nimport { ParticipantVM } from \"./ParticipantVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new ParticipantVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetListView = (q) => {\r\n  var qI = new ListView();\r\n  var iconSize = 15\r\n\r\n  qI.ItemRender = (v) => <div className='cip__item__wrapper' key={v}>\r\n    <span>\r\n      <PointerView width={iconSize} height={iconSize}\r\n        className='cip__item__icon'/>\r\n    </span>\r\n    <span>{v}</span>\r\n  </div>\r\n\r\n  qI.Items = q.Items;\r\n  qI.ColumnCount = 1;\r\n\r\n  return qI;\r\n}","import { InfoVM } from \"./InfoVM\";\r\nimport * as benefitUtil from '../benefit/BenefitVMUtil'\r\nimport * as briefUtil from '../brief/BriefVMUtil'\r\nimport * as descriptionUtil from '../description/DescriptionVMUtil'\r\nimport * as participantUtil from '../participant/ParticipantVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new InfoVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetBrief = (q) => {\r\n  return briefUtil.get(q.ModelItem.Brief, q)\r\n}\r\n\r\nexport const GetBenefit = (q) => {\r\n  return benefitUtil.get(q.ModelItem.Benefit, q)\r\n}\r\n\r\nexport const GetDescription = (q) => {\r\n  return descriptionUtil.get(q.ModelItem.Description, q)\r\n}\r\n\r\nexport const GetParticipant = (q) => {\r\n  return participantUtil.get\r\n    (q.ModelItem.Participant, q)\r\n}","import { BriefVM } from \"./BriefVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new BriefVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './InfoVMUtil'\r\n\r\nexport class InfoVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  brief\r\n  get Brief(){\r\n    if (!this.brief){\r\n      this.brief = util.GetBrief(this)\r\n    } return this.brief;\r\n  }\r\n\r\n  benefit\r\n  get Benefit(){\r\n    if (!this.benefit){\r\n      this.benefit = util.GetBenefit(this)\r\n    } return this.benefit;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = util.GetDescription(this)\r\n    } return this.description\r\n  }\r\n\r\n  participant\r\n  get Participant(){\r\n    if (!this.participant){\r\n      this.participant = util.GetParticipant(this)\r\n    } return this.participant\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Brief.css'\r\nimport { BriefVM } from './BriefVM';\r\n\r\nclass BriefView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new BriefVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cib__wrapper'>\r\n          {/* Background */}\r\n          <div className='sec-bgcolor'>\r\n            <div className='flex-center'>\r\n              {/* Title */}\r\n              <div className='cib__title__dec1'>\r\n                <div className='cib__title__dec2'>\r\n                  <h2 className='cib__h2'>{data.Name}</h2>\r\n                  <span className='special'>{data.Description}</span>\r\n                </div>\r\n\r\n                {/* Addition */}\r\n                <div className='cib__addition'>\r\n                  {data.Dict.Dict.CostView}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(BriefView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Benefit.css'\r\nimport { BenefitVM } from './BenefitVM';\r\n\r\nclass BenefitView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new BenefitVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cibe__wrapper flex'>\r\n          <div className='cibe__dec'>\r\n            <h3>{data.Header}</h3>\r\n            {data.ListView.View}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(BenefitView);\r\n","export const createMarkup = (data) => {\r\n  try {\r\n    return { __html: data };\r\n  }\r\n  catch {\r\n    data = \"Invalid html\";\r\n    return { __html: data };\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as util from '../../util/htmlUtil'\r\nimport TextView from \"../text/TextView\";\r\nimport { renderToString } from 'react-dom/server'\r\nimport * as htmlRenderVMUtil from './HtmlRenderVMUtil'\r\nimport * as viewType from \"../../constant/viewType\"\r\nimport * as htmlUtil from \"../../util/htmlUtil\"\r\nimport InputView from \"../input/InputView\";\r\nimport { Button } from \"antd\";\r\n\r\nclass HtmlRenderView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemRef = React.createRef()\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `<p>store của textView</p>`\r\n      this.state = htmlRenderVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    data.RenderReactElements();\r\n  }\r\n\r\n  onClick2 = () => {\r\n    var data = this.state;\r\n    data.RenderReactElements();\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className\r\n    var style = this.props.style\r\n    var content = data.RefinedContent;\r\n\r\n    return (\r\n      <>\r\n        <div className={className} style={style}>\r\n          <div ref={this.itemRef}\r\n            dangerouslySetInnerHTML={util.createMarkup(content)} />\r\n          {this.getWrapperContent()}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(HtmlRenderView)","import HtmlRenderVM from './HtmlRenderVM'\r\n\r\nexport const get = (q, isFormatContent = false) => {\r\n  var qI = new HtmlRenderVM();\r\n  qI.InitialContent = q;\r\n  qI.isFormatContent = isFormatContent\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Description.css'\r\nimport { DescriptionVM } from './DescriptionVM';\r\nimport HtmlRenderView from '../../../../../html/HtmlRenderView';\r\n\r\nclass DescriptionView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DescriptionVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cid__wrapper'>\r\n          <h3>{data.Header}</h3>\r\n          <HtmlRenderView store={data.HtmlContentVM} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(DescriptionView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Participant.css'\r\nimport { ParticipantVM } from './ParticipantVM';\r\n\r\nclass ParticipantView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ParticipantVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cip__wrapper'>\r\n          <h3>{data.Header}</h3>\r\n          {data.ListView.View}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(ParticipantView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './Info.css'\r\nimport { InfoVM } from './InfoVM';\r\nimport BriefView from '../brief/BriefView';\r\nimport BenefitView from '../benefit/BenefitView';\r\nimport DescriptionView from '../description/DescriptionView';\r\nimport ParticipantView from '../participant/ParticipantView';\r\n\r\nclass InfoView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new InfoVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='ci__wrapper'>\r\n          <div className='ci__b'>\r\n            <BriefView store={data.Brief} />\r\n          </div>\r\n          <div className='flex-center'>\r\n            <div className='w80'>\r\n              <div className='w65'>\r\n                <div className='ci__be offset'>\r\n                  <BenefitView store={data.Benefit} />\r\n                </div>\r\n                <div className='ci__d offset'>\r\n                  <DescriptionView store={data.Description} />\r\n                </div>\r\n                <div className='ci__p offset'>\r\n                  <ParticipantView store={data.Participant} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(InfoView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './CourseInfo.css'\r\nimport { CourseVM } from '../../base/CourseVM';\r\nimport { Link } from 'react-router-dom';\r\nimport InfoView from '../../info/base/InfoView';\r\n\r\nclass CourseInfoView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new CourseVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='couseinfo__wrapper'>\r\n          {data.Info ?\r\n            <InfoView store={data.Info} />\r\n            : '' }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(CourseInfoView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './CourseVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport ImageView from '../../../../image/ImageView'\r\nimport * as imgUtil from '../../../../image/ImageUtil'\r\nimport CourseCostView from '../view/cost/CourseCostView';\r\nimport CourseInfoView from '../view/info/CourseInfoView';\r\n\r\nexport class CourseVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      info: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Meta() {\r\n    return this.ModelItem.Meta;\r\n  } set Meta(v) {\r\n    this.ModelItem.Meta = v;\r\n  }\r\n\r\n  // Link\r\n  get SupLink() {\r\n    return `course/${this.Meta}`\r\n  }\r\n\r\n  get InfoLink() {\r\n    return `${this.SupLink}/info`\r\n  }\r\n\r\n  get MainLink() {\r\n    return `${this.SupLink}/main`\r\n  }\r\n\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  // Thumbnail\r\n  get Thumbnail() {\r\n    return this.ModelItem.Thumbnail;\r\n  } set Thumbnail(v) {\r\n    this.ModelItem.Thumbnail = v;\r\n  }\r\n\r\n  get ThumbnailView() {\r\n    var img = imgUtil.get(this.Thumbnail);\r\n    return <ImageView store={img} />\r\n  }\r\n\r\n  // Info\r\n  OnSet_Info_Func = []\r\n\r\n  info = undefined\r\n  get Info() {\r\n    if (this.info === undefined) {\r\n      util.Handle_Info(this)\r\n    } return this.info\r\n  } set Info(v) {\r\n    this.info = v;\r\n  }\r\n\r\n  // Cost\r\n  cost\r\n  get Cost() {\r\n    if (!this.cost) {\r\n      this.cost = util.GetCost(this)\r\n    } return this.cost\r\n  }\r\n\r\n  // ProductDict\r\n  productDict\r\n  get ProductDict(){\r\n    if (!this.productDict){\r\n      this.productDict = util.GetProductDict(this)\r\n    } return this.productDict\r\n  }\r\n\r\n  // main\r\n  main\r\n  get Main(){\r\n    if (!this.main){\r\n      this.main = util.GetMain(this)\r\n    } return this.main;\r\n  }\r\n\r\n  // View\r\n  get InfoView() {\r\n    return <CourseInfoView key={this.id} store={this} />\r\n  }\r\n\r\n  get CostView() {\r\n    return <CourseCostView store={this} />\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { MenuVM } from './MenuVM';\r\nimport './Menu.css'\r\n\r\nclass MenuView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MenuVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='f'>\r\n          {data.ItemDict.View}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MenuView);\r\n","export const content = \"content\"\r\nexport const student_product = \"student_product\"\r\n\r\nexport const GetTitle = (v) => {\r\n  var obj\r\n\r\n  switch (v) {\r\n    case content:\r\n      obj = 'Nội dung'\r\n      break;\r\n    case student_product:\r\n      obj = \"Sản phẩm\"\r\n      break;\r\n  }\r\n\r\n  return obj;\r\n}","import { Component } from \"react\";\r\nimport { observer } from 'mobx-react';\r\nimport { Item } from \"./Item\";\r\nimport './Item.css'\r\n\r\nclass ItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Item();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div onClick={data.OnClick}\r\n          className={`nav__item ${data.Dict.ItemCss} ${data.ActiveCss}`}>{data.Title}</div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ItemView)","import { observable } from \"mobx\"\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport ItemView from \"./ItemView\"\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Dict\r\n\r\n  Func\r\n\r\n  OnClick = () => {\r\n    this.Dict.CurrentItem = this;\r\n    this.Func();\r\n  }\r\n\r\n  Active = () => {\r\n    this.Dict.CurrentItem = this;\r\n  }\r\n\r\n  get ActiveCss(){\r\n    return this._id === this.Dict.CurrentItem?._id ? 'active' : ''\r\n  }\r\n\r\n  get View(){\r\n    return <ItemView key={this.id} store={this} />\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { observer } from 'mobx-react';\r\nimport { Dict } from './Dict'\r\n\r\nclass DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className={data.WrapperCss}>\r\n          {data.Items?.map(x => x.View)}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DictView)","import { makeObservable, observable, action } from 'mobx';\r\nimport DictView from \"./DictView\"\r\n\r\nexport class Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Items: observable,\r\n      CurrentItem: observable\r\n    })\r\n  }\r\n\r\n  WrapperCss = ''\r\n\r\n  ItemCss = ''\r\n\r\n  Items = undefined\r\n\r\n  CurrentItem = undefined\r\n\r\n  get View() {\r\n    return <DictView store={this} />\r\n  }\r\n}","import * as m_it from '../base/Main_ViewType'\r\nimport * as menuItemUtil from '../../../../../nav/item/ItemUtil'\r\nimport { Dict as ItemDict } from '../../../../../nav/dict/Dict'\r\n\r\n// Property\r\nexport const GetItemDict = (q) => {\r\n  var qI = new ItemDict();\r\n\r\n  qI.WrapperCss = 'cm__main__menu__itemDict'\r\n  qI.ItemCss = 'cm__main__menu__item main-bgcolor'\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (q) => {\r\n  var list = [m_it.content, m_it.student_product]\r\n  var dict = q.ItemDict;\r\n\r\n  const getItem = (value) => {\r\n    var qI = menuItemUtil.get(dict);\r\n    \r\n    qI._id = value\r\n    qI.Title = m_it.GetTitle(value)\r\n    qI.Func = () => q.Dict.ViewType = value\r\n\r\n    return qI;\r\n  }\r\n\r\n  return list.map(x => getItem(x));\r\n}\r\n\r\nexport const SetItems = (q) => {\r\n  var items = GetItems(q);\r\n  var qI = q.ItemDict;\r\n  qI.Items = items;\r\n\r\n  items[0].Active();\r\n}","import { Item } from \"./Item\"\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport MenuView from './MenuView';\r\nimport * as util from './MenuVMUtil'\r\n\r\nexport class MenuVM {\r\n  itemDict\r\n  get ItemDict() {\r\n    if (!this.itemDict) {\r\n      this.itemDict = util.GetItemDict(this)\r\n      util.SetItems(this)\r\n    } return this.itemDict;\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  get View() {\r\n    return <MenuView store={this} />\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { MainVM } from './MainVM';\r\nimport './Main.css'\r\nimport * as vt from './Main_ViewType'\r\n\r\nclass MainView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MainVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='f'>\r\n          <div>\r\n            {data.Menu.View}\r\n          </div>\r\n\r\n          <div className='f1 cm__main__wrapper'>\r\n            {data.ViewType === vt.content ? \"Content\" :\r\n              data.Dict.ProductDict.View\r\n            }\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MainView);\r\n","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MainVMUtil'\r\nimport * as vt from './Main_ViewType'\r\nimport MainView from './MainView';\r\n\r\nexport class MainVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ViewType: observable\r\n    })\r\n  }\r\n\r\n  menu\r\n  get Menu() {\r\n    if (!this.menu) {\r\n      this.menu = util.GetMenu(this)\r\n    } return this.menu\r\n  }\r\n\r\n  ViewType = vt.content\r\n\r\n  get View() {\r\n    return <MainView store={this} />\r\n  }\r\n}","import { MenuVM } from \"../menu/MenuVM\"\r\n\r\n// Property\r\nexport const GetMenu = (q) => {\r\n  var qI = new MenuVM();\r\n  qI.Dict = q;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { DictVM } from './DictVM';\r\nimport './Dict.css'\r\n\r\nclass DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.CurrentItem ?\r\n          <div className='cpd__currentitem__warpper'>\r\n            {data.CurrentItem.FullView}\r\n          </div>\r\n          : ''\r\n        }\r\n        {data.Items.map(x => x.BriefView)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(DictView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport DictView from './DictView';\r\nimport * as util from './DictVMUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      CurrentItem : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  CurrentItem = undefined\r\n\r\n  get View(){\r\n    return <DictView store={this}/>\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { ProductVM } from './ProductVM';\r\nimport './Product_Brief.css'\r\n\r\nclass Product_BriefView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ProductVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className={`f-ac cpbr__wrapper ${data.ActiveCss}`}\r\n          onClick={data.OnClick}>\r\n          <div className='f1 cpbr__title__wrapper'>\r\n            {data.Title}\r\n          </div>\r\n\r\n          <div className='f'>\r\n            {/* Authors */}\r\n            <div className='f-ac'>\r\n              <span>Tác giả:</span>\r\n              <div className='cpbr__users author f'>\r\n                {data.Authors.map(x => x.BadgeView)}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Instructors */}\r\n            <div className='f-ac'>\r\n              <span>Hướng dẫn:</span>\r\n              <div className='cpbr__users instructor f'>\r\n                {data.Instructors.map(x => x.BadgeView)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Product_BriefView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { ProductVM } from './ProductVM';\r\nimport './Product_Full.css'\r\n\r\nclass Product_FullView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ProductVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className='f-jc'>\r\n            <div className='f cpp_t__wrapper'>\r\n              <span className='cpp__t__title sec-color'>DỰ ÁN:</span>\r\n              <span className='cpp__t__value'>{data.Title}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <table className='cpp__fieldtable'>\r\n            <tr>\r\n              <td className='cpp__field__title'>Tên dự án:</td>\r\n              <td className='cpp__field__input'>{data.Title}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className='cpp__field__title'>Mô tả:</td>\r\n              <td className='cpp__field__input'>{data.Description}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className='cpp__field__title'>Ngày tạo:</td>\r\n              <td className='cpp__field__input'>{data.CreatedDate_String}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Product_FullView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ProductVMUtil'\r\nimport Product_BriefView from './Product_BriefView';\r\nimport Product_FullView from './Product_FullView';\r\nimport * as dateUtil from '../../../../../../util/dateUtil'\r\n\r\nexport class ProductVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Title() {\r\n    return this.ModelItem.Title\r\n  } set Title(v) {\r\n    this.ModelItem.Title = v;\r\n  }\r\n\r\n  get Description() {\r\n    return this.ModelItem.Description\r\n  } set Description(v) {\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  get CreatedDate(){\r\n    return this.ModelItem.CreatedDate\r\n  } set CreatedDate(v){\r\n    this.ModelItem.CreatedDate = v;\r\n  }\r\n\r\n  get CreatedDate_String(){\r\n    return dateUtil.ConvertToString(this.CreatedDate, 'dd/MM/yyyy')\r\n  }\r\n\r\n  authors\r\n  get Authors() {\r\n    if (!this.authors) {\r\n      this.authors = util.GetAuthors(this)\r\n    } return this.authors\r\n  }\r\n\r\n  instructors\r\n  get Instructors() {\r\n    if (!this.instructors) {\r\n      this.instructors = util.GetInstructors(this)\r\n    } return this.instructors\r\n  }\r\n\r\n  // Active\r\n  SetActive = () => {\r\n    if (this.Dict) {\r\n      this.Dict.CurrentItem = this\r\n    }\r\n  }\r\n\r\n  get ActiveCss() {\r\n    return this.Dict?.CurrentItem === this ? 'active' : ''\r\n  }\r\n\r\n  // Event\r\n  OnClick = () => {\r\n    this.SetActive();\r\n  }\r\n\r\n  // View\r\n  get BriefView() {\r\n    return <Product_BriefView key={this.id} store={this} />\r\n  }\r\n\r\n  get FullView() {\r\n    return <Product_FullView key={this.id} store={this} />\r\n  }\r\n}","export const RemoveTime = (dateTime) => {\r\n  var year = dateTime.getFullYear()\r\n  var month = dateTime.getMonth()\r\n  var date = dateTime.getDate()\r\n\r\n  return new Date(year, month, date)\r\n}\r\n\r\nexport const ConvertToDate = (dateString, format) => {\r\n  if (!dateString) return undefined;\r\n\r\n  var refinedString\r\n  switch (format) {\r\n    case 'dd/MM/yyyy':\r\n      var q1 = dateString.split('/')\r\n      if (q1.length !== 3) {\r\n        return undefined;\r\n      }\r\n\r\n      if (!Is_DayString_Valid(q1[0])\r\n      || !Is_MonthString_Valid(q1[1])\r\n      || !Is_YearString_Valid(q1[2])){\r\n        return undefined\r\n      }\r\n      \r\n      refinedString = q1.reverse().join('-')\r\n      break;\r\n    default:\r\n      refinedString = dateString;\r\n      break;\r\n  }\r\n\r\n  return new Date(refinedString)\r\n}\r\n\r\nconst Is_DayString_Valid = (dayS) => {\r\n  if (dayS.length < 1 || dayS.length > 2) return false;\r\n  if (isNaN(dayS)) return false\r\n\r\n  var day = parseInt(dayS)\r\n  if (day < 1 || day > 31) return false;\r\n  return true;\r\n}\r\n\r\nconst Is_MonthString_Valid = (monthS) => {\r\n  if (monthS.length < 1 || monthS.length > 2) return false;\r\n  if (isNaN(monthS)) return false\r\n\r\n  var month = parseInt(monthS)\r\n  if (month < 1 || month > 12) return false;\r\n  return true;\r\n}\r\n\r\nconst Is_YearString_Valid = (yearS) => {\r\n  if (yearS.length !== 4) return false;\r\n  if (isNaN(yearS)) return false\r\n\r\n  return true;\r\n}\r\n\r\nexport const ConvertToString = (date, format) => {\r\n  if (!date) return undefined\r\n\r\n  var weekday = date.toLocaleDateString(\"en-US\", { weekday: 'short' })\r\n  var day = date.toLocaleDateString(\"en-US\", { day: 'numeric' })\r\n  var month = date.toLocaleDateString(\"en-US\", { month: '2-digit' })\r\n  var year = date.toLocaleDateString(\"en-US\", { year: 'numeric' })\r\n\r\n  switch(format){\r\n    case 'dd/MM/yyyy':\r\n    default:\r\n      return `${day}/${month}/${year}`;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './UserVMUtil'\r\nimport './User.css'\r\n\r\nexport class UserVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Name(){\r\n    return this.ModelItem.Name\r\n  }\r\n\r\n  // View\r\n  get BadgeView(){\r\n    return <div key={this.id} \r\n      className='user__badge__wrapper dark-bgcolor'>\r\n      {this.Name}\r\n    </div>\r\n  }\r\n}","import { UserVM } from \"./UserVM\"\r\nimport { Button } from \"antd\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new UserVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { Button } from \"antd\";\r\nimport { ProductVM } from \"./ProductVM\";\r\nimport * as userUtil from '../../../user/UserVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new ProductVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetAuthors = (q) => {\r\n  return q.ModelItem.Authors.map(x => userUtil.get(x, q))\r\n}\r\n\r\nexport const GetInstructors = (q) => {\r\n  return q.ModelItem.Instructors.map(x => userUtil.get(x, q))\r\n}","import { Button } from \"antd\";\r\nimport { DictVM } from \"./DictVM\";\r\nimport * as itemUtil from '../base/ProductVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => itemUtil.get(x, q));\r\n}","import { CourseVM } from \"./CourseVM\"\r\nimport { Button } from \"antd\";\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport * as infoUtil from '../info/base/InfoVMUtil'\r\nimport * as costUtil from '../cost/CostVMUtil'\r\nimport { MainVM } from \"../main/base/MainVM\";\r\nimport * as productDictUtil from '../product/dict/DictVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new CourseVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Info = (q) => {\r\n  if (q.IsGet_Info) return undefined;\r\n  q.IsGet_Info = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Info = infoUtil.get(data, q);\r\n    q.IsGet_Info = false\r\n  }\r\n\r\n  var modelObj = q.ModelItem\r\n  if (modelObj.Info){\r\n    setObj(modelObj.Info)\r\n  } else {\r\n    genUtil.Add_2(\r\n    modelObj.OnSet_Info_Func,\r\n    () => setObj(modelObj.Info),\r\n    false)\r\n  }\r\n}\r\n\r\nexport const GetCost = (q) => {\r\n  return costUtil.get(q.ModelItem.Cost, q);\r\n}\r\n\r\nexport const GetMain = (q) => {\r\n  var qI = new MainVM();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetProductDict = (q) => {\r\n  return productDictUtil.get(q.ModelItem.ProductDict, q)\r\n}","import { CostVM } from \"./CostVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new CostVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './CourseItem.css'\r\nimport { CourseVM } from '../../base/CourseVM';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CourseItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new CourseVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Link to={data.InfoLink}>\r\n          <div className='courseitem__wrapper'>\r\n            {data.ThumbnailView}\r\n            <div className='couseitem__name__wrapper flex-center'>\r\n              {data.Name}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(CourseItemView);\r\n","import { CourseDictVM } from \"./CourseDictVM\"\r\nimport { Button } from \"antd\";\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport * as mUtil from './CourseDictUtil'\r\nimport * as iUtil from '../base/CourseVMUtil'\r\nimport CourseItemView from \"../view/item/CourseItemView\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return q;\r\n  var qI = new CourseDictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (mdict, dict) => {\r\n  return get(mUtil.GetTest(mdict), dict);\r\n}\r\n\r\n// Property\r\n// Course\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.get(x, q))\r\n    q.IsGet_Items = false\r\n  }\r\n\r\n  var modelObj = q.ModelItem\r\n  if (modelObj.Items) {\r\n    setObj(modelObj.Items)\r\n  } else {\r\n    genUtil.Add_2(\r\n      modelObj.OnSet_Items_Func_Dict,\r\n      () => setObj(modelObj.Items),\r\n      false)\r\n  }\r\n}\r\n\r\nexport const GetDefault_RenderItem = (q) => {\r\n  return (v) => <CourseItemView key={v.id} store={v} />\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover } from 'antd';\r\nimport './CourseDict.css'\r\nimport * as util from './CourseDictVMUtil'\r\n\r\nclass CourseDictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='cd__wrapper'>\r\n          {data.Items?.map(x => data.RenderItem(x))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(CourseDictView);\r\n","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as vt from '../../view/ViewType'\r\nimport CourseDictView from '../../course/dict/CourseDictView';\r\nimport CourseInfoView from '../../course/view/info/CourseInfoView';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Body {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n  get CourseDict() {\r\n    return pmDataVM().CourseDict;\r\n  }\r\n\r\n  get CurrentCourse() {\r\n    return pmDataVM().CurrentCourse;\r\n  }\r\n\r\n  // View\r\n  get MainView() {\r\n    var qI = pmDataVM();\r\n    if (!qI.RouteData) {\r\n      qI.RouteData = [vt.home]\r\n    }\r\n\r\n    var rd = qI.RouteData\r\n    switch (rd[0]) {\r\n      case vt.home:\r\n        return <div className='f-jc'>\r\n          <div className='w80'>\r\n            <CourseDictView store={this.CourseDict} />\r\n          </div>\r\n        </div>\r\n      case vt.course:\r\n        {\r\n          switch (rd[1]) {\r\n            case 'info':\r\n              return this.CurrentCourse.InfoView\r\n            case 'main':\r\n              return <div className='f-jc'>\r\n                <div className='w80'>\r\n                  {this.CurrentCourse.Main.View}\r\n                </div>\r\n              </div>\r\n          }\r\n        }\r\n    }\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './FooterUtil'\r\n\r\nexport class Footer {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n}","import { Layout } from './Layout';\r\nimport * as headerUtil from '../header/HeaderUtil'\r\nimport * as bodyUtil from '../body/BodyUtil'\r\nimport * as footerUtil from '../footer/FooterUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { message } from 'antd';\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new Layout();\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\nexport const GetHeader = (q) => {\r\n  return headerUtil.get(q)\r\n}\r\n\r\nexport const GetBody = (q) => {\r\n  return bodyUtil.get(q)\r\n}\r\n\r\nexport const GetFooter = (q) => {\r\n  return footerUtil.get(q)\r\n}","import { Header, Vi_Header } from './Header';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as vs from '../../view/ViewState'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Header();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { Body } from './Body';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { convertToRaw, EditorState } from 'draft-js';\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Body();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\n","import { Footer } from './Footer';\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Footer();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\n\r\n","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\nimport { PMDataVM } from './PMDataVM';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as layoutUtil from '../../entity/layout/layout/LayoutUtil'\r\nimport * as courseDictUtil from '../../entity/course/dict/CourseDictVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMDataVM();\r\n\r\n  genUtil.Add(pmData().OnSet_IsAdmin_Func_Dict, () => {\r\n    // Update nav\r\n    qI.IsAdmin = pmData().IsAdmin\r\n  }, false)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLayout = (q) => {\r\n  return layoutUtil.get()\r\n}\r\n\r\nexport const GetCourseDict = (q) => {\r\n  return courseDictUtil.get(pmData().CourseDict, q)\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Header.css'\r\nimport { Header } from './Header';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeaderView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Header()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='header__wrapper flex-center'>\r\n          <div className='w80 flex-start'>\r\n            <Link to='/' className='header__logo__wrapper'>\r\n              {data.LogoView}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(HeaderView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Pagination } from 'antd';\r\nimport './Body.css'\r\nimport { Body } from './Body';\r\nimport * as vs from '../../view/ViewState'\r\nimport CourseDictView from '../../course/dict/CourseDictView';\r\n\r\nclass BodyView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Body()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='body__wrapper'>\r\n          {data.MainView}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(BodyView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Footer.css'\r\nimport { Footer } from './Footer';\r\n\r\nclass FooterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Footer()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='footer__wrapper'>\r\n          Footer\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FooterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, message, Switch } from 'antd';\r\nimport './Layout.css'\r\nimport { Layout, Vi_Comp } from './Layout';\r\nimport HeaderView from '../header/HeaderView';\r\nimport BodyView from '../body/BodyView';\r\nimport FooterView from '../footer/FooterView';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as vt from '../../view/ViewType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass LayoutView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Layout()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='layout__wrapper'>\r\n          {/* Header */}\r\n          <HeaderView store={data.Header} />\r\n\r\n          {/* Body */}\r\n          <BodyView store={data.Body} />\r\n\r\n          {/* Footer */}\r\n          <FooterView store={data.Footer} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(LayoutView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { PMDataVM } from './PMDataVM';\r\n// import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport LayoutView from '../../entity/layout/layout/LayoutView';\r\n\r\nclass PMDataView extends Component {\r\n  render() {\r\n    var data = this.data;\r\n\r\n    return (\r\n      <>\r\n        <Route path='/:type?/:meta?/:type2?' exact component={LayoutView} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport { Route, BrowserRouter, HashRouter, Switch } from 'react-router-dom';\r\nimport LayoutView from '../../entity/layout/layout/LayoutView';\r\nimport PMDataView from './PMDataView';\r\nimport * as vt from '../../entity/view/ViewType'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isAdmin: observable,\r\n      CurrentCourse : observable,\r\n      RouteData : observable\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get();\r\n    }\r\n    return this.instance;\r\n  } static set Instance(v) {\r\n    this.instance = v\r\n  }\r\n\r\n  get pmData() {\r\n    return PMData.Instance;\r\n  }\r\n\r\n  // Layout\r\n  layout\r\n  get Layout() {\r\n    if (!this.layout) {\r\n      this.layout = util.GetLayout(this)\r\n    }\r\n    return this.layout\r\n  }\r\n\r\n  OnSet_IsAdmin_Func_Dict = []\r\n\r\n  // User\r\n  isAdmin = undefined\r\n  get IsAdmin() {\r\n    return this.isAdmin\r\n  } set IsAdmin(v) {\r\n    this.isAdmin = v;\r\n\r\n    genUtil.Handle(this.OnSet_IsAdmin_Func_Dict,\r\n      (v) => this.OnSet_IsAdmin_Func_Dict = v)\r\n  }\r\n\r\n  // Route\r\n  RouteData = undefined\r\n\r\n  // View\r\n  // ViewType = vt.home\r\n\r\n  get MainView() {\r\n    return <PMDataView store={this}/>\r\n  }\r\n\r\n  get WrapperView() {\r\n    return this.pmData.IsDeploy ?\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          {this.MainView}\r\n        </Switch>\r\n      </HashRouter>\r\n      :\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {this.MainView}\r\n        </Switch>\r\n      </BrowserRouter>\r\n  }\r\n\r\n  // Data\r\n  // Course\r\n  courseDict\r\n  get CourseDict() {\r\n    if (!this.courseDict) {\r\n      this.courseDict = util.GetCourseDict(this)\r\n    } return this.courseDict\r\n  }\r\n\r\n  CurrentCourse = undefined\r\n}","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport { PMDataVM } from './model/main/single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {pmDataVM().WrapperView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}